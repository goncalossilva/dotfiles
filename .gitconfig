[user]
    name = Gon√ßalo Silva
    email = goncalossilva@gmail.com
    signingkey = FCE7261799167E4B
[core]
    ignorecase = true
    editor = "vim"
    excludesfile = /home/goncalossilva/.gitignore_global
[init]
    defaultBranch = main
[commit]
    gpgsign = true
[pull]
    ff = only
[push]
    default = current
[submodule]
    fetchJobs = 4
    recurse = true
[diff]
    compactionHeuristic = true
    submodule = diff
    colorMoved = dimmed_zebra
[filter "lfs"]
    smudge = git-lfs smudge -- %f
    required = true
    clean = git-lfs clean -- %f
    process = git-lfs filter-process
[remote "origin"]
    prune = true
[merge]
    tool = meld
[credential]
    helper = /usr/libexec/git-core/git-credential-libsecret
    helper = osxkeychain
[alias]
    branchprune = "!f() { \
        set -e; \
        MAIN="${1:-main}"; \
        git fetch --prune; \
        git checkout -q "$MAIN"; \
        allbranches=$(git for-each-ref refs/heads/ \"--format=%(refname:short)\"); \
        while IFS= read -r branch; do mergeBase=$(git merge-base \"$MAIN\" \"$branch\") && [[ $(git cherry \"$MAIN\" $(git commit-tree $(git rev-parse \"$branch^{tree}\") -p \"$mergeBase\" -m _)) == \"-\"* ]] && list=\"$list\\n$branch\"; done <<< \"$allbranches\"; \
        cmd='echo \"$list\" | xargs -n 1 git branch -D'; \
        if [ -z \"$list\" ]; then \
            echo \"No branches to remove.\"; \
        else \
            echo \"\nBranches to remove:$list\n\"; \
            read -p 'Press enter to continue'; echo \" \"; \
            eval $cmd; \
        fi \
    }; f"
    tagrename = "!f() { \
        git tag $2 $1 && \
        git tag -d $1 && \
        git push origin :refs/tags/$1 && \
        git push --tags; \
    }; f"
