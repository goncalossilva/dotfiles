[user]
    name = GonÃ§alo Silva
    email = goncalossilva@gmail.com
    signingkey = FCE7261799167E4B
[core]
    ignorecase = true
    editor = "vim"
[init]
    defaultBranch = main
[commit]
    gpgsign = true
[pull]
    ff = only
[push]
    default = current
[submodule]
    fetchJobs = 4
    recurse = true
[diff]
    compactionHeuristic = true
    submodule = diff
    colorMoved = dimmed_zebra
[filter "lfs"]
    smudge = git-lfs smudge -- %f
    required = true
    clean = git-lfs clean -- %f
    process = git-lfs filter-process
[remote "origin"]
    prune = true
[merge]
    tool = meld
[credential]
    helper = /usr/libexec/git-core/git-credential-libsecret
    helper = osxkeychain
[alias]
    autoremove = "!f() { \
        keeplist=\"master|main|dev|legacy\"; \
        git fetch --prune; \
        if [ -z \"$1\" ]; then \
            list=$(git branch --merged | egrep -v \"(^\\*|$keeplist)\") && \
            cmd='echo \"$list\" | xargs -n 1 git branch -d'; \
        else \
            list=$(git branch -r --merged | grep \"$1\" | egrep -v \"(>|$keeplist)\") && \
            cmd='echo \"$list\" | cut -d'/' -f2- | xargs -n 1 git push \"$1\" --delete'; \
        fi; \
        echo \"On branch $(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \\(.*\\)/\\1/'). \"; echo \"\"; \
        if [ -z \"$list\" ]; then \
            echo \"No branches to remove.\"; \
        else \
            echo \"Branches to remove:\"; echo \"$list\"; echo \"\"; \
            read -p 'Press enter to continue'; echo \" \"; \
            eval $cmd; \
        fi \
    }; f"
    autoremoveall = "!git remote | xargs -n 1 git autoremove; git autoremove"
[alias]
    renametag = "!f() { \
        git tag $2 $1 && \
        git tag -d $1 && \
        git push origin :refs/tags/$1 && \
        git push --tags; \
    }; f"
